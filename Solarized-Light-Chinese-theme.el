(deftheme Solarized-Light-Chinese
  "Created 2017-08-10.")

(custom-theme-set-variables
 'Solarized-Light-Chinese
 '(custom-safe-themes (quote ("4cf3221feff536e2b3385209e9b9dc4c2e0818a69a1cdb4b522756bcdf4e00a4" default)))
 '(package-selected-packages (quote (plantuml-mode whole-line-or-region whitespace-cleanup-mode wgrep vc-darcs unfill undo-tree tidy textile-mode tagedit switch-window smex slime-company session scratch regex-tool redshank rainbow-mode rainbow-delimiters projectile project-local-variables pip-requirements paredit-everywhere page-break-lines osx-location origami org-pomodoro org-mac-iCal org-fstree org-cliplink nlinum mwe-log-commands multiple-cursors move-dup mmm-mode markdown-mode magit lively ledger-mode ipretty indent-guide immortal-scratch ibuffer-vc htmlize hl-sexp hippie-expand-slime highlight-symbol highlight-quoted highlight-escape-sequences guide-key grab-mac-link gnuplot gitignore-mode gitconfig-mode git-timemachine git-messenger git-blamed fullframe flycheck-package flycheck-ledger flycheck-clojure fill-column-indicator expand-region exec-path-from-shell elisp-slime-nav elein dsvn disable-mouse dired-sort dired+ diminish diff-hl default-text-scale darcsum csv-nav csv-mode crontab-mode counsel company-quickhelp company-anaconda color-theme-sanityinc-tomorrow color-theme-sanityinc-solarized cljsbuild-mode cl-lib-highlight cask-mode browse-kill-ring browse-at-remote avy auto-compile anzu aggressive-indent)))
 '(session-use-package t)
 '(ansi-color-names-vector (quote (vector "#657b83" "#dc322f" "#859900" "#b58900" "#268bd2" "#d33682" "#2aa198" "#073642")))
 '(ansi-color-faces-vector [default bold shadow italic underline bold bold-italic bold]))

(custom-theme-set-faces
 'Solarized-Light-Chinese
 '(bold ((((class color) (min-colors 89)) (:weight bold))))
 '(bold-italic ((((class color) (min-colors 89)) (:slant italic :weight bold))))
 '(underline ((((class color) (min-colors 89)) (:underline t))))
 '(italic ((((class color) (min-colors 89)) (:slant italic))))
 '(font-lock-builtin-face ((t (:foreground "#6c71c4"))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant italic))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant italic))))
 '(font-lock-constant-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(font-lock-function-name-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(font-lock-keyword-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(font-lock-negation-char-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(font-lock-regexp-grouping-backslash ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(font-lock-regexp-grouping-construct ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(font-lock-string-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:weight bold :foreground "#dc322f"))))
 '(shadow ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(success ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(error ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(rainbow-delimiters-depth-8-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mmm-code-submode-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(mmm-comment-submode-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(mmm-output-submode-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(match ((((class color) (min-colors 89)) (:foreground "#268bd2" :background "#fdf6e3" :inverse-video t))))
 '(isearch ((((class color) (min-colors 89)) (:foreground "#b58900" :background "#fdf6e3" :inverse-video t))))
 '(lazy-highlight ((((class color) (min-colors 89)) (:foreground "#2aa198" :background "#fdf6e3" :inverse-video t))))
 '(isearch-fail ((((class color) (min-colors 89)) (:background "#fdf6e3" :inherit font-lock-warning-face :inverse-video t))))
 '(anzu-mode-line ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(anzu-replace-highlight ((((class color) (min-colors 89)) (:inherit isearch-lazy-highlight-face))))
 '(anzu-replace-to ((((class color) (min-colors 89)) (:inherit isearch))))
 '(ido-subdir ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(ido-first-match ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(ido-indicator ((((class color) (min-colors 89)) (:foreground "#dc322f" :background "#fdf6e3"))))
 '(ido-virtual ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(cursor ((((class color) (min-colors 89)) (:background "#586e75"))))
 '(fringe ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(border ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(highlight ((((class color) (min-colors 89)) (:inverse-video nil :background "#eee8d5"))))
 '(mode-line ((((class color) (min-colors 89)) (:foreground nil :background "#eee8d5" :weight normal :box (:line-width 1 :color "#657b83")))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:foreground "#d33682" :background nil))))
 '(mode-line-inactive ((((class color) (min-colors 89)) (:inherit mode-line :foreground "#93a1a1" :background "#eee8d5" :weight normal :box (:line-width 1 :color "#657b83")))))
 '(mode-line-emphasis ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(mode-line-highlight ((((class color) (min-colors 89)) (:foreground "#d33682" :box nil :weight bold))))
 '(minibuffer-prompt ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(region ((((class color) (min-colors 89)) (:foreground "#586e75" :inverse-video t))))
 '(secondary-selection ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(header-line ((((class color) (min-colors 89)) (:inherit mode-line :foreground "#d33682" :background nil))))
 '(trailing-whitespace ((((class color) (min-colors 89)) (:background "#dc322f" :underline nil))))
 '(show-paren-match ((((class color) (min-colors 89)) (:background nil :foreground nil :inverse-video t))))
 '(show-paren-mismatch ((((class color) (min-colors 89)) (:background "#d33682" :foreground "#fdf6e3"))))
 '(diff-added ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(diff-changed ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(diff-removed ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(diff-header ((((class color) (min-colors 89)) (:foreground "#2aa198" :background nil))))
 '(diff-file-header ((((class color) (min-colors 89)) (:foreground "#268bd2" :background nil))))
 '(diff-hunk-header ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(diff-refine-added ((((class color) (min-colors 89)) (:inherit diff-added :inverse-video t))))
 '(diff-refine-removed ((((class color) (min-colors 89)) (:inherit diff-removed :inverse-video t))))
 '(diff-hl-insert ((((class color) (min-colors 89)) (:foreground "#859900" :background "#859900"))))
 '(diff-hl-change ((((class color) (min-colors 89)) (:foreground "#268bd2" :background "#268bd2"))))
 '(diff-hl-delete ((((class color) (min-colors 89)) (:foreground "#b58900" :background "#b58900"))))
 '(eldoc-highlight-function-argument ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(undo-tree-visualizer-active-branch-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(diredp-compressed-file-suffix ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(diredp-date-time ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(diredp-deletion ((((class color) (min-colors 89)) (:inherit error :inverse-video t))))
 '(diredp-deletion-file-name ((((class color) (min-colors 89)) (:inherit error))))
 '(diredp-dir-heading ((((class color) (min-colors 89)) (:foreground "#859900" :background nil :weight bold))))
 '(diredp-dir-priv ((((class color) (min-colors 89)) (:foreground "#2aa198" :background nil))))
 '(diredp-exec-priv ((((class color) (min-colors 89)) (:foreground "#268bd2" :background nil))))
 '(diredp-executable-tag ((((class color) (min-colors 89)) (:foreground "#dc322f" :background nil))))
 '(diredp-file-name ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(diredp-file-suffix ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(diredp-flag-mark ((((class color) (min-colors 89)) (:foreground "#859900" :inverse-video t))))
 '(diredp-flag-mark-line ((((class color) (min-colors 89)) (:background nil :inherit highlight))))
 '(diredp-ignored-file-name ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(diredp-link-priv ((((class color) (min-colors 89)) (:background nil :foreground "#6c71c4"))))
 '(diredp-mode-line-flagged ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(diredp-mode-line-marked ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(diredp-no-priv ((((class color) (min-colors 89)) (:background nil))))
 '(diredp-number ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(diredp-other-priv ((((class color) (min-colors 89)) (:background nil :foreground "#d33682"))))
 '(diredp-rare-priv ((((class color) (min-colors 89)) (:foreground "#dc322f" :background nil))))
 '(diredp-read-priv ((((class color) (min-colors 89)) (:foreground "#859900" :background nil))))
 '(diredp-symlink ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(diredp-write-priv ((((class color) (min-colors 89)) (:foreground "#b58900" :background nil))))
 '(guide-key/prefix-command-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(guide-key/highlight-command-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(guide-key/key-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(link ((((class color) (min-colors 89)) (:foreground nil :underline t))))
 '(widget-button ((((class color) (min-colors 89)) (:underline t))))
 '(widget-field ((((class color) (min-colors 89)) (:background "#eee8d5" :box (:line-width 1 :color "#657b83")))))
 '(compilation-column-number ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(compilation-line-number ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(compilation-mode-line-exit ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(compilation-mode-line-fail ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(compilation-mode-line-run ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(company-preview ((((class color) (min-colors 89)) (:foreground "#839496" :background "#073642"))))
 '(company-preview-common ((((class color) (min-colors 89)) (:inherit company-preview :foreground "#b58900"))))
 '(company-preview-search ((((class color) (min-colors 89)) (:inherit company-preview :foreground "#268bd2"))))
 '(company-tooltip ((((class color) (min-colors 89)) (:background "#073642"))))
 '(company-tooltip-selection ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(company-tooltip-common ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#b58900"))))
 '(company-tooltip-common-selection ((((class color) (min-colors 89)) (:inherit company-tooltip-selection :foreground "#b58900"))))
 '(company-tooltip-search ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#268bd2"))))
 '(company-tooltip-annotation ((((class color) (min-colors 89)) (:inherit company-tooltip :foreground "#859900"))))
 '(company-scrollbar-bg ((((class color) (min-colors 89)) (:inherit (quote company-tooltip) :background "#eee8d5"))))
 '(company-scrollbar-fg ((((class color) (min-colors 89)) (:background "#073642"))))
 '(company-echo-common ((((class color) (min-colors 89)) (:inherit company-echo :foreground "#b58900"))))
 '(org-agenda-structure ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(org-agenda-date ((((class color) (min-colors 89)) (:foreground "#268bd2" :underline nil))))
 '(org-agenda-done ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-agenda-dimmed-todo-face ((((class color) (min-colors 89)) (:foreground "#839496"))))
 '(org-block ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(org-code ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(org-column ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(org-column-title ((((class color) (min-colors 89)) (:inherit org-column :weight bold :underline t))))
 '(org-date ((((class color) (min-colors 89)) (:foreground "#268bd2" :underline t))))
 '(org-document-info ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(org-document-info-keyword ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-document-title ((((class color) (min-colors 89)) (:weight bold :foreground "#b58900" :height 1.44))))
 '(org-done ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-ellipsis ((((class color) (min-colors 89)) (:foreground "#839496"))))
 '(org-footnote ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(org-formula ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(org-hide ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#fdf6e3"))))
 '(org-link ((((class color) (min-colors 89)) (:foreground "#268bd2" :underline t))))
 '(org-scheduled ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-scheduled-previously ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(org-scheduled-today ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-special-keyword ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(org-table ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(org-todo ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(org-upcoming-deadline ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(org-warning ((((class color) (min-colors 89)) (:weight bold :foreground "#dc322f"))))
 '(markdown-url-face ((((class color) (min-colors 89)) (:inherit link))))
 '(markdown-link-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :underline t))))
 '(highlight-symbol-face ((((class color) (min-colors 89)) (:inherit isearch-lazy-highlight-face))))
 '(outline-1 ((((class color) (min-colors 89)) (:inherit nil :foreground "#268bd2"))))
 '(outline-2 ((((class color) (min-colors 89)) (:inherit nil :foreground "#6c71c4"))))
 '(outline-3 ((((class color) (min-colors 89)) (:inherit nil :foreground "#2aa198"))))
 '(outline-4 ((((class color) (min-colors 89)) (:inherit nil :foreground "#b58900"))))
 '(outline-5 ((((class color) (min-colors 89)) (:inherit nil :foreground "#cb4b16"))))
 '(outline-6 ((((class color) (min-colors 89)) (:inherit nil :foreground "#268bd2"))))
 '(outline-7 ((((class color) (min-colors 89)) (:inherit nil :foreground "#6c71c4"))))
 '(outline-8 ((((class color) (min-colors 89)) (:inherit nil :foreground "#2aa198"))))
 '(gnus-summary-normal-unread ((((class color) (min-colors 89)) (:foreground "#586e75" :weight normal))))
 '(gnus-summary-normal-read ((((class color) (min-colors 89)) (:foreground "#657b83" :weight normal))))
 '(gnus-summary-normal-ancient ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight normal))))
 '(gnus-summary-normal-ticked ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight normal))))
 '(gnus-summary-low-unread ((((class color) (min-colors 89)) (:foreground "#839496" :weight normal))))
 '(gnus-summary-low-read ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight normal))))
 '(gnus-summary-low-ancient ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight normal))))
 '(gnus-summary-high-unread ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal))))
 '(gnus-summary-high-read ((((class color) (min-colors 89)) (:foreground "#859900" :weight normal))))
 '(gnus-summary-high-ancient ((((class color) (min-colors 89)) (:foreground "#859900" :weight normal))))
 '(gnus-summary-high-ticked ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight normal))))
 '(gnus-summary-cancelled ((((class color) (min-colors 89)) (:foreground "#dc322f" :background nil :weight normal))))
 '(gnus-group-mail-low ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(gnus-group-mail-low-empty ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(gnus-group-mail-1 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-1))))
 '(gnus-group-mail-2 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-2))))
 '(gnus-group-mail-3 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-3))))
 '(gnus-group-mail-1-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-1 :foreground "#839496"))))
 '(gnus-group-mail-2-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-2 :foreground "#839496"))))
 '(gnus-group-mail-3-empty ((((class color) (min-colors 89)) (:inherit gnus-group-mail-3 :foreground "#839496"))))
 '(gnus-group-news-1 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-5))))
 '(gnus-group-news-2 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-6))))
 '(gnus-group-news-3 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-7))))
 '(gnus-group-news-4 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-8))))
 '(gnus-group-news-5 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-1))))
 '(gnus-group-news-6 ((((class color) (min-colors 89)) (:foreground nil :weight normal :inherit outline-2))))
 '(gnus-group-news-1-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-1 :foreground "#839496"))))
 '(gnus-group-news-2-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-2 :foreground "#839496"))))
 '(gnus-group-news-3-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-3 :foreground "#839496"))))
 '(gnus-group-news-4-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-4 :foreground "#839496"))))
 '(gnus-group-news-5-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-5 :foreground "#839496"))))
 '(gnus-group-news-6-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-6 :foreground "#839496"))))
 '(custom-variable-tag ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(custom-group-tag ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(default ((((class color) (min-colors 89))
             (:foreground "#657b83" :background "#fdf6e3" :font "Monaco:pixelsize=16")))))

(provide-theme 'Solarized-Light-Chinese)
